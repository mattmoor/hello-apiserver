load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "backoff.go",
        "balancer.go",
        "call.go",
        "clientconn.go",
        "doc.go",
        "interceptor.go",
        "rpc_util.go",
        "server.go",
        "stream.go",
        "trace.go",
    ],
    importpath = "google.golang.org/grpc",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/golang/protobuf/proto:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
        "//vendor/golang.org/x/net/http2:go_default_library",
        "//vendor/golang.org/x/net/trace:go_default_library",
        "//vendor/google.golang.org/grpc/codes:go_default_library",
        "//vendor/google.golang.org/grpc/credentials:go_default_library",
        "//vendor/google.golang.org/grpc/grpclog:go_default_library",
        "//vendor/google.golang.org/grpc/internal:go_default_library",
        "//vendor/google.golang.org/grpc/metadata:go_default_library",
        "//vendor/google.golang.org/grpc/naming:go_default_library",
        "//vendor/google.golang.org/grpc/transport:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "backoff_test.go",
        "balancer_test.go",
        "call_test.go",
        "clientconn_test.go",
        "rpc_util_test.go",
        "server_test.go",
    ],
    data = glob(["testdata/**"]),
    importpath = "google.golang.org/grpc",
    library = ":go_default_library",
    deps = [
        "//vendor/github.com/golang/protobuf/proto:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
        "//vendor/google.golang.org/grpc/codes:go_default_library",
        "//vendor/google.golang.org/grpc/credentials:go_default_library",
        "//vendor/google.golang.org/grpc/credentials/oauth:go_default_library",
        "//vendor/google.golang.org/grpc/naming:go_default_library",
        "//vendor/google.golang.org/grpc/test/codec_perf:go_default_library",
        "//vendor/google.golang.org/grpc/transport:go_default_library",
    ],
)
